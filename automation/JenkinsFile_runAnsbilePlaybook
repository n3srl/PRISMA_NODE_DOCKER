node('docker') {
    // Parameters
    def ANSIBLE_PLAYBOOK_FILE = 'ansible/guest_node_update_freeture.yaml'
    def ANSIBLE_INVENTORY = 'ansible/inventory.ini'
	
	
	// Load the content of the openvpn.conf file from the secret file parameter
	withCredentials([file(credentialsId: 'PRISMA_GUEST_OPENVPN_CONF', variable: 'OPENVPN_CONF_FILE')]) {
		OPENVPN_CONF_CONTENT = readFile OPENVPN_CONF_FILE
	}
    // Credentials
    def ANSIBLE_USER = params.ANSIBLE_USER

    def docker_image = docker.image('debian:bullseye')
	
	try {
        docker_image.pull()
    } catch (Exception e) {
        // Log error and abort if image pull fails
        println "Failed to pull Docker image: ${e.message}"
        error "Failed to pull Docker image"
    }
	
	 // Stage 2: Run OpenVPN, Run Ansible Playbook
    stage('Install & Run OpenVPN & Ansible') 
	{
        withCredentials([usernamePassword(credentialsId: 'ANSIBLE_USER', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
			
			sh """
				whoami
				git pull origin main
			"""
			
			sh """
					sudo DEBIAN_FRONTEND=noninteractive apt-get update
					sudo DEBIAN_FRONTEND=noninteractive apt-get -y install systemctl openvpn 
					
					if [ ! -d "/etc/openvpn" ]; then
					sudo DEBIAN_FRONTEND=noninteractive mkdir /etc/openvpn
					fi
			"""
				
                sh """
					sudo DEBIAN_FRONTEND=noninteractive cat << '#DELIMITER' > /etc/openvpn/openvpn.conf
					${OPENVPN_CONF_CONTENT}
					#DELIMITER
				"""
				
				sh """
					sudo DEBIAN_FRONTEND=noninteractive echo "log-append /var/log/openvpn.log" >> /etc/openvpn/openvpn.conf
					
					sudo DEBIAN_FRONTEND=noninteractive systemctl enable --now openvpn
					
                    sudo DEBIAN_FRONTEND=noninteractive systemctl daemon-reload
					
					sudo DEBIAN_FRONTEND=noninteractive systemctl status openvpn
					
					sleep 5
					
						
					if [ -d "/etc/openvpn/openvpn.log" ]; then
					sudo DEBIAN_FRONTEND=noninteractive cat /var/log/openvpn.log
					fi
					
					ip addr
				"""
			
            // Using the Docker Pipeline plugin to run OpenVPN inside the Docker container
            docker_image.inside("-v \"${WORKSPACE}:/ansible\" -u root:root --device=/dev/net/tun --cap-add=NET_ADMIN  --network host\"") {
                    
					// Write the OpenVPN configuration file
					sh """
					sudo DEBIAN_FRONTEND=noninteractive apt-get update
					
					sudo DEBIAN_FRONTEND=noninteractive apt-get -y install ansible
					
					cat ${ANSIBLE_INVENTORY}
					
					ls /
					ls /ansible
					ansible-playbook -i ${ANSIBLE_INVENTORY}  ${ANSIBLE_PLAYBOOK_FILE}
					"""
            }
        }
    }
    // Clean up workspace
    cleanWs()
}