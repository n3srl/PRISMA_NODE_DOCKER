node('docker') {
    // Parameters
    def ANSIBLE_PLAYBOOK_FILE = 'ansible/guest_node_update_freeture.yaml'
    def ANSIBLE_INVENTORY = 'ansible/inventory.ini'
	
	
	// Load the content of the openvpn.conf file from the secret file parameter
	withCredentials([file(credentialsId: 'PRISMA_GUEST_OPENVPN_CONF', variable: 'OPENVPN_CONF_FILE')]) {
		OPENVPN_CONF_CONTENT = readFile OPENVPN_CONF_FILE
	}
    // Credentials
    def ANSIBLE_USER = params.ANSIBLE_USER

    def docker_image = docker.image('debian:bullseye')
	
	try {
        docker_image.pull()
    } catch (Exception e) {
        // Log error and abort if image pull fails
        println "Failed to pull Docker image: ${e.message}"
        error "Failed to pull Docker image"
    }
	
	 // Stage 2: Run OpenVPN, Run Ansible Playbook
    stage('Install & Run OpenVPN & Ansible') {
        withCredentials([usernamePassword(credentialsId: 'ANSIBLE_USER', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
			
            // Using the Docker Pipeline plugin to run OpenVPN inside the Docker container
            docker_image.inside("-v \"${WORKSPACE}:/ansible\" -u root:root \"") {
					
                    
					// Write the OpenVPN configuration file
					sh """
					apt-get update
					apt-get install openvpn -y
					
					if [ ! -d "/etc/openvpn" ]; then
					mkdir /etc/openvpn
					fi
					
					"""

                    sh """
					cat << '#DELIMITER' > /etc/openvpn/openvpn.conf
					${OPENVPN_CONF_CONTENT}
					#DELIMITER
					"""
					sh """
					apt-get -y install systemctl

                    systemctl daemon-reload
					service openvpn restart
					"""
					
					sh """
					git pull
					cat ${ANSIBLE_INVENTORY}
					apt-get -y install ansible
					ls /
					ls /ansible
					ansible-playbook -i ${ANSIBLE_INVENTORY}  ${ANSIBLE_PLAYBOOK_FILE}
					"""
                
            }
        }
    }
    // Clean up workspace
    cleanWs()
}